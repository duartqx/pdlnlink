#!/usr/bin/env bash

YTDLCONC='--ytdl-raw-options=concurrent-fragments=50'
YTDLQLTY='--ytdl-format="bestvideo[height<=1080]+bestaudio/best[height<=1080]"'
OPTIONS='mpv-playlist
mpv
mpv-novid
download-playlist
play-local-playlist
check-playlist
check-local-playlist
send-to-playlist
edit-playlist
get-playlist-bkp
primary-to-clipboard
ytdl
ytdl-mix
torrent'
# The options on the initial dmenu prompt
CHOICE=$(echo "$OPTIONS" | dmenu -i)
CLIP=$(xclip -selection clipboard -o 2>/dev/null) # The clipboard content

[[ -z $CHOICE ]] && exit

bkpLocal() {
    # Backup local playlist
    mkdir -p /tmp/playlist-bkp # Creates the bkp folder if it doesn't exists
    mv /tmp/playlist/* /tmp/playlist-bkp/ # Moves all files to the bkp folder
}
bkpPlaylistFile() {
    cat ~/.local/share/playlist > ~/.local/share/playlist-bkp
    rm ~/.local/share/playlist
}
playLocal() {
    mpv --fs /tmp/playlist
    # If mpv returns an error, the playlist is probably empty
    if [[ $? == 1 ]]; then
        notify-send "Local playlist is probably Empty"
        exit 1
    else
        bkpLocal
    fi
}
ytbNotify() {
    youtube-dl -f ${YTDLQLTY:15:-1} "--${YTDLCONC:19}" --newline \
        "$CLIP" 2>&1 | send2notify -p
}

case "$CHOICE" in

"mpv-playlist") 
    if [[ -d /tmp/playlist ]]; then
        # Plays local playlist if it exists
        playLocal
        
    else
        mpv "$YTDLQLTY" "$YTDLCONC" --fs --x11-name=feed \
        $(awk '{print $NF}' ~/.local/share/playlist || \
        notify-send 'Playlist is empty') || \
        notify-send 'mpv failed to open playlist'
        bkpPlaylistFile
    fi ;; 

"mpv") 
    mpv "${YTDLQLTY//1080/720}" "$YTDLCONC" --fs --loop \
        "$CLIP" >/dev/null 2>&1 ;;

"mpv-novid") 
    xterm -e mpv "$YTDLCONC" --vid=no --loop "$CLIP" ;;

"download-playlist")
    if [[ -f ~/.local/share/playlist ]]; then
        cd /tmp/playlist
        youtube-dl -f ${YTDLQLTY:15:-1} "--${YTDLCONC:19}" \
            --newline --no-abort-on-error \
            $(awk '{print $NF}' ~/.local/share/playlist) 2>&1 | send2notify -p
        bkpPlaylistFile
    else
        notify-send "Playlist empty"
        exit 1
    fi ;;

"play-local-playlist")
    if [[ -d /tmp/playlist ]]; then 
        # If the playlist folder exists, tries to play the files in it with mpv
        playLocal
    else
        # If /tmp/playlist doesn't exists notifies it's empty and exit 1
        notify-send "Local playlist is Empty"
        exit 1
    fi ;;

"check-local-playlist")
    PLAYLIST="$(find /tmp/playlist/* -printf "%f\n")"
    echo "$PLAYLIST" | dmenu -p Local -l $(echo "$PLAYLIST" | wc -l) || \
        pdlnmpv ;;

"check-playlist") 
    cat .local/share/playlist | \
        dmenu -i -l $(wc -l < .local/share/playlist) || pdlnmpv ;;

"send-to-playlist") 
    send2notify "$CLIP" ;;

"edit-playlist") 
    # Needs a conditional because vim doesn't care if the file exits or not
    if [[ -f ~/.local/share/playlist ]]; then
        xterm -e nvim ~/.local/share/playlist
    else
        notify-send 'Playlist is empty'
    fi 
    pdlnmpv ;;

"get-playlist-bkp")
    if [[ -f ~/.local/share/playlist-bkp ]]; then
        cat ~/.local/share/playlist-bkp > ~/.local/share/playlist
        notify-send 'Recovered Playlist'
    else
        notify-send 'Playlist Backup not found'
    fi 
    pdlnmpv ;;

"primary-to-clipboard") 
    xclip -selection primary -o | xclip -selection clipboard
    notify-send 'Sent from Primary to Clipboard' ;;

"torrent") 
    tadd "$CLIP" ;;

"ytdl")  
    ytbNotify ;;

"ytdl-mix") 
    cd ~/Media/Videos/Mixes/jMIX
    ytbNotify ;;

esac

# if the content of the clipboard wasn't a url and some of the option tried to
# use it, send the error to notify-send
if [[ "$?" == 1 ]]; then
    notify-send "Invalid or Not an URL"
    exit 1
fi

exit
